{
  "name": "object-filter",
  "version": "1.0.2",
  "description": "`Array.prototype.filter` for objects",
  "keywords": [
    "object",
    "filter"
  ],
  "author": {
    "name": "Maciej MaÅ‚ecki",
    "email": "me@mmalecki.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mmalecki/object-filter.git"
  },
  "scripts": {
    "test": "node test/simple-test.js"
  },
  "license": "MIT",
  "readme": "# objfilter\n[![Build Status](https://travis-ci.org/mmalecki/objfilter.png?branch=master)](https://travis-ci.org/mmalecki/objfilter)\n\n`Array.prototype.filter` for objects.\n\n## Usage\n\n```js\nvar assert = require('assert');\nvar objfilter = require('../');\n\nvar o1 = {\n  a: 1,\n  b: -1,\n  c: 0,\n  d: 42\n};\n\nobjfilter(o1, function (n) {\n  return n > 0;\n}); // => `{ a: 1, d: 42 }`\n```\n\n## API\n\n### `objfilter(obj, iterator, this)`\n\n* `obj` (`object`) - object to filter on\n* `iterator` (`function`, required) - iterator function\n* `this` (optional) - `this` for `iterator`\n\nCreates a new object with all the elements that pass the test implemented by\n`iterator`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mmalecki/object-filter/issues"
  },
  "homepage": "https://github.com/mmalecki/object-filter",
  "_id": "object-filter@1.0.2",
  "_from": "object-filter@~1.0.1"
}
